// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2rayapi.proto

#include "v2rayapi.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_v2rayapi_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Stat_v2rayapi_2eproto;
namespace v2ray {
namespace core {
namespace app {
namespace stats {
namespace command {
class GetStatsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStatsRequest> _instance;
} _GetStatsRequest_default_instance_;
class StatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Stat> _instance;
} _Stat_default_instance_;
class GetStatsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStatsResponse> _instance;
} _GetStatsResponse_default_instance_;
class QueryStatsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryStatsRequest> _instance;
} _QueryStatsRequest_default_instance_;
class QueryStatsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryStatsResponse> _instance;
} _QueryStatsResponse_default_instance_;
class SysStatsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SysStatsRequest> _instance;
} _SysStatsRequest_default_instance_;
class SysStatsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SysStatsResponse> _instance;
} _SysStatsResponse_default_instance_;
class ConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Config> _instance;
} _Config_default_instance_;
}  // namespace command
}  // namespace stats
}  // namespace app
}  // namespace core
}  // namespace v2ray
static void InitDefaultsscc_info_Config_v2rayapi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v2ray::core::app::stats::command::_Config_default_instance_;
    new (ptr) ::v2ray::core::app::stats::command::Config();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v2ray::core::app::stats::command::Config::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Config_v2rayapi_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Config_v2rayapi_2eproto}, {}};

static void InitDefaultsscc_info_GetStatsRequest_v2rayapi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v2ray::core::app::stats::command::_GetStatsRequest_default_instance_;
    new (ptr) ::v2ray::core::app::stats::command::GetStatsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v2ray::core::app::stats::command::GetStatsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStatsRequest_v2rayapi_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetStatsRequest_v2rayapi_2eproto}, {}};

static void InitDefaultsscc_info_GetStatsResponse_v2rayapi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v2ray::core::app::stats::command::_GetStatsResponse_default_instance_;
    new (ptr) ::v2ray::core::app::stats::command::GetStatsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v2ray::core::app::stats::command::GetStatsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetStatsResponse_v2rayapi_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetStatsResponse_v2rayapi_2eproto}, {
      &scc_info_Stat_v2rayapi_2eproto.base,}};

static void InitDefaultsscc_info_QueryStatsRequest_v2rayapi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v2ray::core::app::stats::command::_QueryStatsRequest_default_instance_;
    new (ptr) ::v2ray::core::app::stats::command::QueryStatsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v2ray::core::app::stats::command::QueryStatsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryStatsRequest_v2rayapi_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryStatsRequest_v2rayapi_2eproto}, {}};

static void InitDefaultsscc_info_QueryStatsResponse_v2rayapi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v2ray::core::app::stats::command::_QueryStatsResponse_default_instance_;
    new (ptr) ::v2ray::core::app::stats::command::QueryStatsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v2ray::core::app::stats::command::QueryStatsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QueryStatsResponse_v2rayapi_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_QueryStatsResponse_v2rayapi_2eproto}, {
      &scc_info_Stat_v2rayapi_2eproto.base,}};

static void InitDefaultsscc_info_Stat_v2rayapi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v2ray::core::app::stats::command::_Stat_default_instance_;
    new (ptr) ::v2ray::core::app::stats::command::Stat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v2ray::core::app::stats::command::Stat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Stat_v2rayapi_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Stat_v2rayapi_2eproto}, {}};

static void InitDefaultsscc_info_SysStatsRequest_v2rayapi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v2ray::core::app::stats::command::_SysStatsRequest_default_instance_;
    new (ptr) ::v2ray::core::app::stats::command::SysStatsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v2ray::core::app::stats::command::SysStatsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SysStatsRequest_v2rayapi_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SysStatsRequest_v2rayapi_2eproto}, {}};

static void InitDefaultsscc_info_SysStatsResponse_v2rayapi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v2ray::core::app::stats::command::_SysStatsResponse_default_instance_;
    new (ptr) ::v2ray::core::app::stats::command::SysStatsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v2ray::core::app::stats::command::SysStatsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SysStatsResponse_v2rayapi_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SysStatsResponse_v2rayapi_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_v2rayapi_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_v2rayapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_v2rayapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_v2rayapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::GetStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::GetStatsRequest, name_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::GetStatsRequest, reset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::Stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::Stat, name_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::Stat, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::GetStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::GetStatsResponse, stat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::QueryStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::QueryStatsRequest, pattern_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::QueryStatsRequest, reset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::QueryStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::QueryStatsResponse, stat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, numgoroutine_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, numgc_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, alloc_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, totalalloc_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, sys_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, mallocs_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, frees_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, liveobjects_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, pausetotalns_),
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::SysStatsResponse, uptime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v2ray::core::app::stats::command::Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::v2ray::core::app::stats::command::GetStatsRequest)},
  { 7, -1, sizeof(::v2ray::core::app::stats::command::Stat)},
  { 14, -1, sizeof(::v2ray::core::app::stats::command::GetStatsResponse)},
  { 20, -1, sizeof(::v2ray::core::app::stats::command::QueryStatsRequest)},
  { 27, -1, sizeof(::v2ray::core::app::stats::command::QueryStatsResponse)},
  { 33, -1, sizeof(::v2ray::core::app::stats::command::SysStatsRequest)},
  { 38, -1, sizeof(::v2ray::core::app::stats::command::SysStatsResponse)},
  { 53, -1, sizeof(::v2ray::core::app::stats::command::Config)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::v2ray::core::app::stats::command::_GetStatsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::v2ray::core::app::stats::command::_Stat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::v2ray::core::app::stats::command::_GetStatsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::v2ray::core::app::stats::command::_QueryStatsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::v2ray::core::app::stats::command::_QueryStatsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::v2ray::core::app::stats::command::_SysStatsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::v2ray::core::app::stats::command::_SysStatsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::v2ray::core::app::stats::command::_Config_default_instance_),
};

const char descriptor_table_protodef_v2rayapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016v2rayapi.proto\022\034v2ray.core.app.stats.c"
  "ommand\".\n\017GetStatsRequest\022\014\n\004name\030\001 \001(\t\022"
  "\r\n\005reset\030\002 \001(\010\"#\n\004Stat\022\014\n\004name\030\001 \001(\t\022\r\n\005"
  "value\030\002 \001(\003\"D\n\020GetStatsResponse\0220\n\004stat\030"
  "\001 \001(\0132\".v2ray.core.app.stats.command.Sta"
  "t\"3\n\021QueryStatsRequest\022\017\n\007pattern\030\001 \001(\t\022"
  "\r\n\005reset\030\002 \001(\010\"F\n\022QueryStatsResponse\0220\n\004"
  "stat\030\001 \003(\0132\".v2ray.core.app.stats.comman"
  "d.Stat\"\021\n\017SysStatsRequest\"\302\001\n\020SysStatsRe"
  "sponse\022\024\n\014NumGoroutine\030\001 \001(\r\022\r\n\005NumGC\030\002 "
  "\001(\r\022\r\n\005Alloc\030\003 \001(\004\022\022\n\nTotalAlloc\030\004 \001(\004\022\013"
  "\n\003Sys\030\005 \001(\004\022\017\n\007Mallocs\030\006 \001(\004\022\r\n\005Frees\030\007 "
  "\001(\004\022\023\n\013LiveObjects\030\010 \001(\004\022\024\n\014PauseTotalNs"
  "\030\t \001(\004\022\016\n\006Uptime\030\n \001(\r\"\010\n\006Config2\336\002\n\014Sta"
  "tsService\022k\n\010GetStats\022-.v2ray.core.app.s"
  "tats.command.GetStatsRequest\032..v2ray.cor"
  "e.app.stats.command.GetStatsResponse\"\000\022q"
  "\n\nQueryStats\022/.v2ray.core.app.stats.comm"
  "and.QueryStatsRequest\0320.v2ray.core.app.s"
  "tats.command.QueryStatsResponse\"\000\022n\n\013Get"
  "SysStats\022-.v2ray.core.app.stats.command."
  "SysStatsRequest\032..v2ray.core.app.stats.c"
  "ommand.SysStatsResponse\"\000BL\n com.v2ray.c"
  "ore.app.stats.commandP\001Z\007command\252\002\034V2Ray"
  ".Core.App.Stats.Commandb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_v2rayapi_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_v2rayapi_2eproto_sccs[8] = {
  &scc_info_Config_v2rayapi_2eproto.base,
  &scc_info_GetStatsRequest_v2rayapi_2eproto.base,
  &scc_info_GetStatsResponse_v2rayapi_2eproto.base,
  &scc_info_QueryStatsRequest_v2rayapi_2eproto.base,
  &scc_info_QueryStatsResponse_v2rayapi_2eproto.base,
  &scc_info_Stat_v2rayapi_2eproto.base,
  &scc_info_SysStatsRequest_v2rayapi_2eproto.base,
  &scc_info_SysStatsResponse_v2rayapi_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_v2rayapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v2rayapi_2eproto = {
  false, false, descriptor_table_protodef_v2rayapi_2eproto, "v2rayapi.proto", 991,
  &descriptor_table_v2rayapi_2eproto_once, descriptor_table_v2rayapi_2eproto_sccs, descriptor_table_v2rayapi_2eproto_deps, 8, 0,
  schemas, file_default_instances, TableStruct_v2rayapi_2eproto::offsets,
  file_level_metadata_v2rayapi_2eproto, 8, file_level_enum_descriptors_v2rayapi_2eproto, file_level_service_descriptors_v2rayapi_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_v2rayapi_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_v2rayapi_2eproto)), true);
namespace v2ray {
namespace core {
namespace app {
namespace stats {
namespace command {

// ===================================================================

void GetStatsRequest::InitAsDefaultInstance() {
}
class GetStatsRequest::_Internal {
 public:
};

GetStatsRequest::GetStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:v2ray.core.app.stats.command.GetStatsRequest)
}
GetStatsRequest::GetStatsRequest(const GetStatsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  reset_ = from.reset_;
  // @@protoc_insertion_point(copy_constructor:v2ray.core.app.stats.command.GetStatsRequest)
}

void GetStatsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetStatsRequest_v2rayapi_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reset_ = false;
}

GetStatsRequest::~GetStatsRequest() {
  // @@protoc_insertion_point(destructor:v2ray.core.app.stats.command.GetStatsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStatsRequest::ArenaDtor(void* object) {
  GetStatsRequest* _this = reinterpret_cast< GetStatsRequest* >(object);
  (void)_this;
}
void GetStatsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStatsRequest& GetStatsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStatsRequest_v2rayapi_2eproto.base);
  return *internal_default_instance();
}


void GetStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v2ray.core.app.stats.command.GetStatsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reset_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "v2ray.core.app.stats.command.GetStatsRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool reset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          reset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v2ray.core.app.stats.command.GetStatsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v2ray.core.app.stats.command.GetStatsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool reset = 2;
  if (this->reset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_reset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v2ray.core.app.stats.command.GetStatsRequest)
  return target;
}

size_t GetStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v2ray.core.app.stats.command.GetStatsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool reset = 2;
  if (this->reset() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v2ray.core.app.stats.command.GetStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v2ray.core.app.stats.command.GetStatsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v2ray.core.app.stats.command.GetStatsRequest)
    MergeFrom(*source);
  }
}

void GetStatsRequest::MergeFrom(const GetStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v2ray.core.app.stats.command.GetStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.reset() != 0) {
    _internal_set_reset(from._internal_reset());
  }
}

void GetStatsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v2ray.core.app.stats.command.GetStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatsRequest::CopyFrom(const GetStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v2ray.core.app.stats.command.GetStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatsRequest::IsInitialized() const {
  return true;
}

void GetStatsRequest::InternalSwap(GetStatsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(reset_, other->reset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Stat::InitAsDefaultInstance() {
}
class Stat::_Internal {
 public:
};

Stat::Stat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:v2ray.core.app.stats.command.Stat)
}
Stat::Stat(const Stat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:v2ray.core.app.stats.command.Stat)
}

void Stat::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Stat_v2rayapi_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = PROTOBUF_LONGLONG(0);
}

Stat::~Stat() {
  // @@protoc_insertion_point(destructor:v2ray.core.app.stats.command.Stat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Stat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Stat::ArenaDtor(void* object) {
  Stat* _this = reinterpret_cast< Stat* >(object);
  (void)_this;
}
void Stat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Stat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Stat& Stat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Stat_v2rayapi_2eproto.base);
  return *internal_default_instance();
}


void Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:v2ray.core.app.stats.command.Stat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Stat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "v2ray.core.app.stats.command.Stat.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Stat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v2ray.core.app.stats.command.Stat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v2ray.core.app.stats.command.Stat.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v2ray.core.app.stats.command.Stat)
  return target;
}

size_t Stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v2ray.core.app.stats.command.Stat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v2ray.core.app.stats.command.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  const Stat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Stat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v2ray.core.app.stats.command.Stat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v2ray.core.app.stats.command.Stat)
    MergeFrom(*source);
  }
}

void Stat::MergeFrom(const Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v2ray.core.app.stats.command.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Stat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v2ray.core.app.stats.command.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stat::CopyFrom(const Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v2ray.core.app.stats.command.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stat::IsInitialized() const {
  return true;
}

void Stat::InternalSwap(Stat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Stat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetStatsResponse::InitAsDefaultInstance() {
  ::v2ray::core::app::stats::command::_GetStatsResponse_default_instance_._instance.get_mutable()->stat_ = const_cast< ::v2ray::core::app::stats::command::Stat*>(
      ::v2ray::core::app::stats::command::Stat::internal_default_instance());
}
class GetStatsResponse::_Internal {
 public:
  static const ::v2ray::core::app::stats::command::Stat& stat(const GetStatsResponse* msg);
};

const ::v2ray::core::app::stats::command::Stat&
GetStatsResponse::_Internal::stat(const GetStatsResponse* msg) {
  return *msg->stat_;
}
GetStatsResponse::GetStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:v2ray.core.app.stats.command.GetStatsResponse)
}
GetStatsResponse::GetStatsResponse(const GetStatsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stat()) {
    stat_ = new ::v2ray::core::app::stats::command::Stat(*from.stat_);
  } else {
    stat_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:v2ray.core.app.stats.command.GetStatsResponse)
}

void GetStatsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetStatsResponse_v2rayapi_2eproto.base);
  stat_ = nullptr;
}

GetStatsResponse::~GetStatsResponse() {
  // @@protoc_insertion_point(destructor:v2ray.core.app.stats.command.GetStatsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete stat_;
}

void GetStatsResponse::ArenaDtor(void* object) {
  GetStatsResponse* _this = reinterpret_cast< GetStatsResponse* >(object);
  (void)_this;
}
void GetStatsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStatsResponse& GetStatsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStatsResponse_v2rayapi_2eproto.base);
  return *internal_default_instance();
}


void GetStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v2ray.core.app.stats.command.GetStatsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && stat_ != nullptr) {
    delete stat_;
  }
  stat_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .v2ray.core.app.stats.command.Stat stat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v2ray.core.app.stats.command.GetStatsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v2ray.core.app.stats.command.Stat stat = 1;
  if (this->has_stat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::stat(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v2ray.core.app.stats.command.GetStatsResponse)
  return target;
}

size_t GetStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v2ray.core.app.stats.command.GetStatsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .v2ray.core.app.stats.command.Stat stat = 1;
  if (this->has_stat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stat_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v2ray.core.app.stats.command.GetStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v2ray.core.app.stats.command.GetStatsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v2ray.core.app.stats.command.GetStatsResponse)
    MergeFrom(*source);
  }
}

void GetStatsResponse::MergeFrom(const GetStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v2ray.core.app.stats.command.GetStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stat()) {
    _internal_mutable_stat()->::v2ray::core::app::stats::command::Stat::MergeFrom(from._internal_stat());
  }
}

void GetStatsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v2ray.core.app.stats.command.GetStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatsResponse::CopyFrom(const GetStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v2ray.core.app.stats.command.GetStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatsResponse::IsInitialized() const {
  return true;
}

void GetStatsResponse::InternalSwap(GetStatsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(stat_, other->stat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryStatsRequest::InitAsDefaultInstance() {
}
class QueryStatsRequest::_Internal {
 public:
};

QueryStatsRequest::QueryStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:v2ray.core.app.stats.command.QueryStatsRequest)
}
QueryStatsRequest::QueryStatsRequest(const QueryStatsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pattern().empty()) {
    pattern_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pattern(),
      GetArena());
  }
  reset_ = from.reset_;
  // @@protoc_insertion_point(copy_constructor:v2ray.core.app.stats.command.QueryStatsRequest)
}

void QueryStatsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryStatsRequest_v2rayapi_2eproto.base);
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reset_ = false;
}

QueryStatsRequest::~QueryStatsRequest() {
  // @@protoc_insertion_point(destructor:v2ray.core.app.stats.command.QueryStatsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryStatsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pattern_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryStatsRequest::ArenaDtor(void* object) {
  QueryStatsRequest* _this = reinterpret_cast< QueryStatsRequest* >(object);
  (void)_this;
}
void QueryStatsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryStatsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryStatsRequest& QueryStatsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryStatsRequest_v2rayapi_2eproto.base);
  return *internal_default_instance();
}


void QueryStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v2ray.core.app.stats.command.QueryStatsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pattern_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reset_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryStatsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pattern = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pattern();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "v2ray.core.app.stats.command.QueryStatsRequest.pattern"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool reset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          reset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryStatsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v2ray.core.app.stats.command.QueryStatsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pattern = 1;
  if (this->pattern().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pattern().data(), static_cast<int>(this->_internal_pattern().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v2ray.core.app.stats.command.QueryStatsRequest.pattern");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pattern(), target);
  }

  // bool reset = 2;
  if (this->reset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_reset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v2ray.core.app.stats.command.QueryStatsRequest)
  return target;
}

size_t QueryStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v2ray.core.app.stats.command.QueryStatsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pattern = 1;
  if (this->pattern().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pattern());
  }

  // bool reset = 2;
  if (this->reset() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryStatsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v2ray.core.app.stats.command.QueryStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryStatsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryStatsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v2ray.core.app.stats.command.QueryStatsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v2ray.core.app.stats.command.QueryStatsRequest)
    MergeFrom(*source);
  }
}

void QueryStatsRequest::MergeFrom(const QueryStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v2ray.core.app.stats.command.QueryStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pattern().size() > 0) {
    _internal_set_pattern(from._internal_pattern());
  }
  if (from.reset() != 0) {
    _internal_set_reset(from._internal_reset());
  }
}

void QueryStatsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v2ray.core.app.stats.command.QueryStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryStatsRequest::CopyFrom(const QueryStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v2ray.core.app.stats.command.QueryStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryStatsRequest::IsInitialized() const {
  return true;
}

void QueryStatsRequest::InternalSwap(QueryStatsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pattern_.Swap(&other->pattern_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(reset_, other->reset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryStatsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryStatsResponse::InitAsDefaultInstance() {
}
class QueryStatsResponse::_Internal {
 public:
};

QueryStatsResponse::QueryStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  stat_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:v2ray.core.app.stats.command.QueryStatsResponse)
}
QueryStatsResponse::QueryStatsResponse(const QueryStatsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      stat_(from.stat_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:v2ray.core.app.stats.command.QueryStatsResponse)
}

void QueryStatsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryStatsResponse_v2rayapi_2eproto.base);
}

QueryStatsResponse::~QueryStatsResponse() {
  // @@protoc_insertion_point(destructor:v2ray.core.app.stats.command.QueryStatsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryStatsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void QueryStatsResponse::ArenaDtor(void* object) {
  QueryStatsResponse* _this = reinterpret_cast< QueryStatsResponse* >(object);
  (void)_this;
}
void QueryStatsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryStatsResponse& QueryStatsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryStatsResponse_v2rayapi_2eproto.base);
  return *internal_default_instance();
}


void QueryStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v2ray.core.app.stats.command.QueryStatsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stat_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryStatsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .v2ray.core.app.stats.command.Stat stat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stat(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryStatsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v2ray.core.app.stats.command.QueryStatsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v2ray.core.app.stats.command.Stat stat = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_stat_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_stat(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v2ray.core.app.stats.command.QueryStatsResponse)
  return target;
}

size_t QueryStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v2ray.core.app.stats.command.QueryStatsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .v2ray.core.app.stats.command.Stat stat = 1;
  total_size += 1UL * this->_internal_stat_size();
  for (const auto& msg : this->stat_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryStatsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v2ray.core.app.stats.command.QueryStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryStatsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryStatsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v2ray.core.app.stats.command.QueryStatsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v2ray.core.app.stats.command.QueryStatsResponse)
    MergeFrom(*source);
  }
}

void QueryStatsResponse::MergeFrom(const QueryStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v2ray.core.app.stats.command.QueryStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stat_.MergeFrom(from.stat_);
}

void QueryStatsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v2ray.core.app.stats.command.QueryStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryStatsResponse::CopyFrom(const QueryStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v2ray.core.app.stats.command.QueryStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryStatsResponse::IsInitialized() const {
  return true;
}

void QueryStatsResponse::InternalSwap(QueryStatsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stat_.InternalSwap(&other->stat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryStatsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SysStatsRequest::InitAsDefaultInstance() {
}
class SysStatsRequest::_Internal {
 public:
};

SysStatsRequest::SysStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:v2ray.core.app.stats.command.SysStatsRequest)
}
SysStatsRequest::SysStatsRequest(const SysStatsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:v2ray.core.app.stats.command.SysStatsRequest)
}

void SysStatsRequest::SharedCtor() {
}

SysStatsRequest::~SysStatsRequest() {
  // @@protoc_insertion_point(destructor:v2ray.core.app.stats.command.SysStatsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SysStatsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SysStatsRequest::ArenaDtor(void* object) {
  SysStatsRequest* _this = reinterpret_cast< SysStatsRequest* >(object);
  (void)_this;
}
void SysStatsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SysStatsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SysStatsRequest& SysStatsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SysStatsRequest_v2rayapi_2eproto.base);
  return *internal_default_instance();
}


void SysStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v2ray.core.app.stats.command.SysStatsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SysStatsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SysStatsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v2ray.core.app.stats.command.SysStatsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v2ray.core.app.stats.command.SysStatsRequest)
  return target;
}

size_t SysStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v2ray.core.app.stats.command.SysStatsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SysStatsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v2ray.core.app.stats.command.SysStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SysStatsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SysStatsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v2ray.core.app.stats.command.SysStatsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v2ray.core.app.stats.command.SysStatsRequest)
    MergeFrom(*source);
  }
}

void SysStatsRequest::MergeFrom(const SysStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v2ray.core.app.stats.command.SysStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SysStatsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v2ray.core.app.stats.command.SysStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysStatsRequest::CopyFrom(const SysStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v2ray.core.app.stats.command.SysStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysStatsRequest::IsInitialized() const {
  return true;
}

void SysStatsRequest::InternalSwap(SysStatsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SysStatsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SysStatsResponse::InitAsDefaultInstance() {
}
class SysStatsResponse::_Internal {
 public:
};

SysStatsResponse::SysStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:v2ray.core.app.stats.command.SysStatsResponse)
}
SysStatsResponse::SysStatsResponse(const SysStatsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&numgoroutine_, &from.numgoroutine_,
    static_cast<size_t>(reinterpret_cast<char*>(&uptime_) -
    reinterpret_cast<char*>(&numgoroutine_)) + sizeof(uptime_));
  // @@protoc_insertion_point(copy_constructor:v2ray.core.app.stats.command.SysStatsResponse)
}

void SysStatsResponse::SharedCtor() {
  ::memset(&numgoroutine_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uptime_) -
      reinterpret_cast<char*>(&numgoroutine_)) + sizeof(uptime_));
}

SysStatsResponse::~SysStatsResponse() {
  // @@protoc_insertion_point(destructor:v2ray.core.app.stats.command.SysStatsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SysStatsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SysStatsResponse::ArenaDtor(void* object) {
  SysStatsResponse* _this = reinterpret_cast< SysStatsResponse* >(object);
  (void)_this;
}
void SysStatsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SysStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SysStatsResponse& SysStatsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SysStatsResponse_v2rayapi_2eproto.base);
  return *internal_default_instance();
}


void SysStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v2ray.core.app.stats.command.SysStatsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&numgoroutine_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uptime_) -
      reinterpret_cast<char*>(&numgoroutine_)) + sizeof(uptime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SysStatsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 NumGoroutine = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          numgoroutine_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 NumGC = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          numgc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Alloc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          alloc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 TotalAlloc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          totalalloc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Sys = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          sys_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Mallocs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          mallocs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Frees = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          frees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 LiveObjects = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          liveobjects_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 PauseTotalNs = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          pausetotalns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Uptime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          uptime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SysStatsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v2ray.core.app.stats.command.SysStatsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 NumGoroutine = 1;
  if (this->numgoroutine() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_numgoroutine(), target);
  }

  // uint32 NumGC = 2;
  if (this->numgc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_numgc(), target);
  }

  // uint64 Alloc = 3;
  if (this->alloc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_alloc(), target);
  }

  // uint64 TotalAlloc = 4;
  if (this->totalalloc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_totalalloc(), target);
  }

  // uint64 Sys = 5;
  if (this->sys() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_sys(), target);
  }

  // uint64 Mallocs = 6;
  if (this->mallocs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_mallocs(), target);
  }

  // uint64 Frees = 7;
  if (this->frees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_frees(), target);
  }

  // uint64 LiveObjects = 8;
  if (this->liveobjects() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_liveobjects(), target);
  }

  // uint64 PauseTotalNs = 9;
  if (this->pausetotalns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_pausetotalns(), target);
  }

  // uint32 Uptime = 10;
  if (this->uptime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_uptime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v2ray.core.app.stats.command.SysStatsResponse)
  return target;
}

size_t SysStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v2ray.core.app.stats.command.SysStatsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 NumGoroutine = 1;
  if (this->numgoroutine() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_numgoroutine());
  }

  // uint32 NumGC = 2;
  if (this->numgc() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_numgc());
  }

  // uint64 Alloc = 3;
  if (this->alloc() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_alloc());
  }

  // uint64 TotalAlloc = 4;
  if (this->totalalloc() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_totalalloc());
  }

  // uint64 Sys = 5;
  if (this->sys() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_sys());
  }

  // uint64 Mallocs = 6;
  if (this->mallocs() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_mallocs());
  }

  // uint64 Frees = 7;
  if (this->frees() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_frees());
  }

  // uint64 LiveObjects = 8;
  if (this->liveobjects() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_liveobjects());
  }

  // uint64 PauseTotalNs = 9;
  if (this->pausetotalns() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_pausetotalns());
  }

  // uint32 Uptime = 10;
  if (this->uptime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_uptime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SysStatsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v2ray.core.app.stats.command.SysStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SysStatsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SysStatsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v2ray.core.app.stats.command.SysStatsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v2ray.core.app.stats.command.SysStatsResponse)
    MergeFrom(*source);
  }
}

void SysStatsResponse::MergeFrom(const SysStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v2ray.core.app.stats.command.SysStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.numgoroutine() != 0) {
    _internal_set_numgoroutine(from._internal_numgoroutine());
  }
  if (from.numgc() != 0) {
    _internal_set_numgc(from._internal_numgc());
  }
  if (from.alloc() != 0) {
    _internal_set_alloc(from._internal_alloc());
  }
  if (from.totalalloc() != 0) {
    _internal_set_totalalloc(from._internal_totalalloc());
  }
  if (from.sys() != 0) {
    _internal_set_sys(from._internal_sys());
  }
  if (from.mallocs() != 0) {
    _internal_set_mallocs(from._internal_mallocs());
  }
  if (from.frees() != 0) {
    _internal_set_frees(from._internal_frees());
  }
  if (from.liveobjects() != 0) {
    _internal_set_liveobjects(from._internal_liveobjects());
  }
  if (from.pausetotalns() != 0) {
    _internal_set_pausetotalns(from._internal_pausetotalns());
  }
  if (from.uptime() != 0) {
    _internal_set_uptime(from._internal_uptime());
  }
}

void SysStatsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v2ray.core.app.stats.command.SysStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysStatsResponse::CopyFrom(const SysStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v2ray.core.app.stats.command.SysStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysStatsResponse::IsInitialized() const {
  return true;
}

void SysStatsResponse::InternalSwap(SysStatsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SysStatsResponse, uptime_)
      + sizeof(SysStatsResponse::uptime_)
      - PROTOBUF_FIELD_OFFSET(SysStatsResponse, numgoroutine_)>(
          reinterpret_cast<char*>(&numgoroutine_),
          reinterpret_cast<char*>(&other->numgoroutine_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SysStatsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Config::InitAsDefaultInstance() {
}
class Config::_Internal {
 public:
};

Config::Config(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:v2ray.core.app.stats.command.Config)
}
Config::Config(const Config& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:v2ray.core.app.stats.command.Config)
}

void Config::SharedCtor() {
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:v2ray.core.app.stats.command.Config)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Config::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Config::ArenaDtor(void* object) {
  Config* _this = reinterpret_cast< Config* >(object);
  (void)_this;
}
void Config::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Config& Config::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Config_v2rayapi_2eproto.base);
  return *internal_default_instance();
}


void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:v2ray.core.app.stats.command.Config)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Config::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Config::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v2ray.core.app.stats.command.Config)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v2ray.core.app.stats.command.Config)
  return target;
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v2ray.core.app.stats.command.Config)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v2ray.core.app.stats.command.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Config* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Config>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v2ray.core.app.stats.command.Config)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v2ray.core.app.stats.command.Config)
    MergeFrom(*source);
  }
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v2ray.core.app.stats.command.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Config::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v2ray.core.app.stats.command.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v2ray.core.app.stats.command.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::InternalSwap(Config* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Config::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace command
}  // namespace stats
}  // namespace app
}  // namespace core
}  // namespace v2ray
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::v2ray::core::app::stats::command::GetStatsRequest* Arena::CreateMaybeMessage< ::v2ray::core::app::stats::command::GetStatsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v2ray::core::app::stats::command::GetStatsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v2ray::core::app::stats::command::Stat* Arena::CreateMaybeMessage< ::v2ray::core::app::stats::command::Stat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v2ray::core::app::stats::command::Stat >(arena);
}
template<> PROTOBUF_NOINLINE ::v2ray::core::app::stats::command::GetStatsResponse* Arena::CreateMaybeMessage< ::v2ray::core::app::stats::command::GetStatsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v2ray::core::app::stats::command::GetStatsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v2ray::core::app::stats::command::QueryStatsRequest* Arena::CreateMaybeMessage< ::v2ray::core::app::stats::command::QueryStatsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v2ray::core::app::stats::command::QueryStatsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v2ray::core::app::stats::command::QueryStatsResponse* Arena::CreateMaybeMessage< ::v2ray::core::app::stats::command::QueryStatsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v2ray::core::app::stats::command::QueryStatsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v2ray::core::app::stats::command::SysStatsRequest* Arena::CreateMaybeMessage< ::v2ray::core::app::stats::command::SysStatsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v2ray::core::app::stats::command::SysStatsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v2ray::core::app::stats::command::SysStatsResponse* Arena::CreateMaybeMessage< ::v2ray::core::app::stats::command::SysStatsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v2ray::core::app::stats::command::SysStatsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v2ray::core::app::stats::command::Config* Arena::CreateMaybeMessage< ::v2ray::core::app::stats::command::Config >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v2ray::core::app::stats::command::Config >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
